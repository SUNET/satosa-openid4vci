op:
  server_info:
    entity_id: 'https://ci.example.com'
    persistence:
      class: satosa_idpyop.persistence.federation_entity.FEPersistence
      kwargs:
        storage:
          class: satosa_idpyop.core.storage.file.FilesystemDB
          kwargs:
            fdir: fe_storage
            key_conv: idpyoidc.util.Base64
            value_conv: idpyoidc.util.JSON
    key_config:
      key_defs:
        - type: RSA
          use:
            - sig
        - type: EC
          crv: P-256
          use:
            - sig
    preference:
      organization_name: The OP operator
      homepage_uri: https://op.example.com
      contacts: operations@op.example.com
    authority_hints:
      - https://ta.example.com
    endpoints:
      entity_configuration:
        path: .well-known/openid-federation
        class: fedservice.entity.server.entity_configuration.EntityConfiguration
    trust_anchors:
      https://ta.example.com:
        keys:
          none
    entity_type:
      oauth_authorization_server:
        class: openid4v.ServerEntity
        kwargs:
          config:
            client_authn_methods:
              client_secret_jwt: idpyoidc.server.client_authn.ClientSecretJWT
              private_key_jwt: idpyoidc.server.client_authn.PrivateKeyJWT
              client_secret_basic: idpyoidc.server.client_authn.ClientSecretBasic,
              client_secret_post: idpyoidc.server.client_authn.ClientSecretPost,
              client_assertion: openid4v.openid_credential_issuer.client_authn.ClientAuthenticationAttestation
              dpop_client_auth: idpyoidc.server.oauth2.add_on.dpop.DPoPClientAuth
            httpc_params:
              verify: false
              timeout: 1
            persistence:
              class: satosa_idpyop.persistence.openid_provider.OPPersistence
              kwargs:
                storage:
                  class: satosa_idpyop.core.storage.file.FilesystemDB
                  kwargs:
                    fdir: op_storage
                    key_conv: idpyoidc.util.Base64
                    value_conv: idpyoidc.util.JSON
            preference:
              grant_types_supported:
                - authorization_code
                - implicit
                - urn:ietf:params:oauth:grant-type:jwt-bearer
                - refresh_token
            server_type: oauth2
            token_handler_args:
              jwks_def:
                private_path: private/token_jwks.json
                read_only: false
                key_defs:
                  -
                    type: oct
                    bytes: 24
                    use:
                      - enc
                    kid: code
              code:
                lifetime: 600
                kwargs:
                  crypt_conf:
                    kwargs:
                      keys:
                        key_defs:
                          -
                            type: OCT
                            use:
                              - enc
                            kid: password
                          -
                            type: OCT
                            use:
                              - enc
                            kid: salt
                      iterations: 1
              token:
                class: idpyoidc.server.token.jwt_token.JWTToken
                kwargs:
                  lifetime: 3600
                  add_claims_by_scope: true
              refresh:
                class: idpyoidc.server.token.jwt_token.JWTToken
                kwargs:
                  lifetime: 3600
              id_token:
                class: idpyoidc.server.token.id_token.IDToken
                kwargs:
                  base_claims:
                    email:
                      essential: true
                    email_verified:
                      essential: true
            keys:
              key_defs:
                -
                  type: RSA
                  use:
                    - sig
                -
                  type: EC
                  crv: P-256
                  use:
                    - sig
              uri_path: oa_jwks.json
              private_path: static/oa_jwks.json
            endpoint:
              token:
                path: token
                class: openid4v.openid_credential_issuer.access_token.Token
                kwargs:
                  client_authn_method:
                    - client_assertion
              authorization:
                path: authorization
                class:
                  openid4v.openid_credential_issuer.authorization.Authorization
                kwargs:
                  client_authn_method:
                    - client_assertion
                  response_types_supported:
                    - code
                  response_modes_supported:
                    - query
                    - form_post
                  request_parameter_supported: true
                  request_uri_parameter_supported: true
            add_ons:
              pkce:
                function: idpyoidc.server.oauth2.add_on.pkce.add_support
                kwargs:
                  code_challenge_length: 64
                  code_challenge_method: S256
              dpop:
                function: idpyoidc.server.oauth2.add_on.dpop.add_support
                kwargs:
                  dpop_signing_alg_values_supported:
                    - ES256
            template_dir: template
            authentication:
              anon:
                acr: http://www.swamid.se/policy/assurance/al1
                class: idpyoidc.server.user_authn.user.NoAuthn
                kwargs:
                  user: diana
            authz:
              class: idpyoidc.server.authz.AuthzHandling
              kwargs:
                grant_config:
                  usage_rules:
                    authorization_code:
                      supports_minting:
                        - access_token
                        - refresh_token
                        - id_token
                      max_usage: 1
                    access_token: { }
                    refresh_token:
                      supports_minting:
                        - access_token
                        - refresh_token
                        - id_token
                  expires_in: 43200
            session_params:
              encrypter:
                kwargs:
                  iterations: 1
                  keys:
                    key_defs:
                      -
                        kid: password
                        type: OCT
                        use:
                          - enc
                      -
                        kid: salt
                        type: OCT
                        use:
                          - enc
            userinfo:
              class: satosa_idpyop.user_info.ProxyUserInfo
              kwargs:
                credential_type_to_claims:
                  PersonIdentificationData:
                    - email
                    - address.streetaddress
                    - sub
                    - name
                    - family_name
                    - given_name
                    - nickname
      openid_credential_issuer:
        class: satosa_openid4vci.openid_credential_issuer.OpenidCredentialIssuer
        kwargs:
          config:
            issuer: https://example.com/
            client_authn_methods:
              client_authentication_attestation:
                openid4v.openid_credential_issuer.client_authn.ClientAuthenticationAttestation
              client_secret_basic:
                idpyoidc.server.client_authn.ClientSecretBasic
              client_secret_post:
                idpyoidc.server.client_authn.ClientSecretPost
              dpop_client_auth:
                idpyoidc.server.oauth2.add_on.dpop.DPoPClientAuth
            add_ons:
              dpop:
                function: idpyoidc.server.oauth2.add_on.dpop.add_support
                kwargs:
                  dpop_signing_alg_values_supported:
                    - ES256
            persistence:
              class: satosa_idpyop.persistence.openid_provider.OPPersistence
              kwargs:
                storage:
                  class: satosa_idpyop.core.storage.file.FilesystemDB
                  kwargs:
                    fdir: op_storage
                    key_conv: idpyoidc.util.Base64
                    value_conv: idpyoidc.util.JSON
            userinfo:
              class: satosa_idpyop.user_info.ProxyUserInfo
              kwargs:
                credential_type_to_claims:
                  PersonIdentificationData:
                    - email
                    - address.streetaddress
                    - sub
                    - name
                    - family_name
                    - given_name
                    - nickname
            httpc_params:
              verify: false
              timeout: 1
            preference:
              attribute_disclosure:
                "":
                  - given_name
                  - family_name
                  - name
                  - email
                  - nickname
              credentials_supported:
                - format: vc+sd-jwt
                  id: eudiw.pid.se
                  cryptographic_binding_methods_supported:
                    - jwk
                  cryptographic_suites_supported:
                    - RS256
                    - RS512
                    - ES256
                    - ES512
                  display:
                    name: Swedish PID Provider Example
                    locale: en-US
                  credential_definition:
                    type:
                      - PersonIdentificationData
                    credentialSubject:
                      name:
                        display:
                          - name: Name of a person
                            locale: en-US
                        mandatory: true
                      family_name:
                        display:
                          - locale: en-US
                            name: Current Family Name
                        mandatory: true
                      given_name:
                        display:
                          - locale: en-US
                            name: Current First Name
                        mandatory: true
                      email:
                        display:
                          - locale: en-US
                            name: Current email address
                        mandatory: true
                      nickname:
                        mandatory: true
                        display:
                          - name: A persons nickname
                            locale: en-US
            keys:
              key_defs:
                - type: RSA
                  use:
                    - sig
                - type: EC
                  crv: P-256
                  use:
                    - sig
              uri_path: oci_jwks.json
              private_path: static/oci_jwks.json
              read_only: false
            endpoint:
              credential:
                path: credential
                class: openid4v.openid_credential_issuer.credential.Credential
                kwargs:
                  client_authn_method:
                    - dpop_client_auth
            template_dir: template


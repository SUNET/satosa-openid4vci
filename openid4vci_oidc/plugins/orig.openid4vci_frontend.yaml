module: satosa_openid4vci.openid4vci.OpenID4VCIFrontend
name: OIDC

config:
  domain: &domain localhost
  server_name: *domain
  base_url: &base_url <base_url>

  storage:
    class: satosa_oidcop.core.storage.file.FilesystemDB
    kwargs:
      fdir: storage
      key_conv: idpyoidc.util.Base64
      value_conv: idpyoidc.util.JSON

  default_target_backend: oidc
  salt_size: 8

  op:
    server_info:
      entity_id: *base_url
      persistence:
        class: satosa_idpyop.persistence.federation_entity.FEPersistence
        kwargs:
          storage:
            class: satosa_idpyop.core.storage.file.FilesystemDB
            kwargs:
              fdir: fe_storage
              key_conv: idpyoidc.util.Base64
              value_conv: idpyoidc.util.JSON
      key_config:
        key_defs:
          - type: RSA
            use:
              - sig
          - type: EC
            crv: P-256
            use:
              - sig
      preference:
        organization_name: The OP operator
        contacts: operations@op.example.com
      authority_hints:
        <AUTHORITY_HINTS>
      trust_marks:
        <TRUST_MARKS>
      endpoints:
        entity_configuration:
          path: ".well-known/openid-federation"
          class: 'fedservice.entity.server.entity_configuration.EntityConfiguration'
      trust_anchors:
        <TRUST_ANCHORS>
      httpc_params:
        verify: false
      entity_type:
        openid_credential_issuer:
          class: satosa_openid4vci.openid_credential_issuer.OpenidCredentialIssuer
          kwargs:
            config:
              issuer: *base_url
              client_authn_methods:
                client_authentication_attestation:
                  openid4v.openid_credential_issuer.client_authn.ClientAuthenticationAttestation
                client_secret_basic:
                  idpyoidc.server.client_authn.ClientSecretBasic
                client_secret_post:
                  idpyoidc.server.client_authn.ClientSecretPost
                dpop_client_auth:
                  idpyoidc.server.oauth2.add_on.dpop.DPoPClientAuth
              persistence:
                class: satosa_idpyop.persistence.openid_provider.OPPersistence
                kwargs:
                  storage:
                    class: satosa_idpyop.core.storage.file.FilesystemDB
                    kwargs:
                      fdir: op_storage
                      key_conv: idpyoidc.util.Base64
                      value_conv: idpyoidc.util.JSON
              httpc_params:
                verify: false
                timeout: 1
              preference:
                subject_types_supported:
                  - public
                  - pairwise
                  - ephemeral
                grant_types_supported:
                  - authorization_code
                  - implicit
                  - urn:ietf:params:oauth:grant-type:jwt-bearer
                  - refresh_token
                attribute_disclosure:
                  '':
                    - given_name
                    - family_name
                    - name
                    - email
                    - nickname
                credentials_supported:
                  - format: vc+sd-jwt
                    id: eudiw.pid.se
                    cryptographic_binding_methods_supported:
                      - jwk
                    cryptographic_suites_supported:
                      - RS256
                      - RS512
                      - ES256
                      - ES512
                    display:
                      name: Swedish PID Provider Example
                      locale: en-US
                    credential_definition:
                      type:
                        - PersonIdentificationData
                      credentialSubject:
                        name:
                          display:
                            - name: Name of a person
                              locale: en-US
                          mandatory: true
                        family_name:
                          display:
                            - locale: en-US
                              name: Current Family Name
                          mandatory: true
                        given_name:
                          display:
                            - locale: en-US
                              name: Current First Name
                          mandatory: true
                        email:
                          display:
                            - locale: en-US
                              name: Current email address
                          mandatory: true
                        nickname:
                          mandatory: true
                          display:
                            - name: A persons nickname
                              locale: en-US
              token_handler_args:
                jwks_def:
                  private_path: private/pid_token_handler_keys.json
                  read_only: false
                  key_defs:
                    - type: oct
                      bytes: 24
                      use:
                        - enc
                      kid: code
                code:
                  lifetime: 900
                  kwargs:
                    crypt_conf:
                      kwargs:
                        iterations: 1
                        keys:
                          key_defs:
                            - kid: password
                              type: OCT
                              use:
                                - enc
                            - kid: salt
                              type: OCT
                              use:
                                - enc
                          private_path: private/pid_crypt_keys.json
                token:
                  class: idpyoidc.server.token.jwt_token.JWTToken
                  kwargs:
                    lifetime: 3600
                    add_claims_by_scope: true
                id_token:
                  class: idpyoidc.server.token.id_token.IDToken
                  kwargs:
                    base_claims:
                      email:
                        essential: true
                      email_verified:
                        essential: true
              keys:
                key_defs:
                  - type: RSA
                    use:
                      - sig
                  - type: EC
                    crv: P-256
                    use:
                      - sig
                uri_path: jwks.json
                private_path: private/pid_oci_keys.json
                read_only: false
              endpoint:
                authorization:
                  path: authorization
                  class: openid4v.openid_credential_issuer.authorization.Authorization
                  kwargs:
                    response_modes_supported:
                      - query
                      - fragment
                      - form_post
                    claim_types_supported:
                      - normal
                      - aggregated
                      - distributed
                    claims_parameter_supported: true
                    request_parameter_supported: true
                    request_uri_parameter_supported: true
                token:
                  path: token
                  class: openid4v.openid_credential_issuer.access_token.Token
                  kwargs:
                    client_authn_method:
                      - client_authentication_attestation
                credential:
                  path: credential
                  class: openid4v.openid_credential_issuer.credential.Credential
                  kwargs:
                    client_authn_method:
                      - dpop_client_auth
                pushed_authorization:
                  path: pushed_authorization
                  class: idpyoidc.server.oauth2.pushed_authorization.PushedAuthorization
                  kwargs:
                    client_authn_method:
                      - client_authentication_attestation
              template_dir: template
              session_params:
                encrypter:
                  kwargs:
                    iterations: 1
                    keys:
                      key_defs:
                        - kid: password
                          type: OCT
                          use:
                            - enc
                        - kid: salt
                          type: OCT
                          use:
                            - enc
              userinfo:
                class: satosa_idpyop.user_info.ProxyUserInfo
                kwargs:
                  credential_type_to_claims:
                    PersonIdentificationData:
                      - email
                      - address.streetaddress
                      - sub
                      - name
                      - family_name
                      - given_name
                      - nickname

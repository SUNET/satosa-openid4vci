module: satosa_openid4vci.openid4vci.OpenID4VCIFrontend
name: OIDC

config:
  domain: &domain localhost
  server_name: *domain
  base_url: &base_url <base_url>

  storage:
    class: satosa_oidcop.core.storage.file.FilesystemDB
    kwargs:
      fdir: storage
      key_conv: idpyoidc.util.Base64
      value_conv: idpyoidc.util.JSON

  default_target_backend: oidc
  salt_size: 8

  op:
    server_info:
      entity_id: *base_url
      persistence:
        class: satosa_idpyop.persistence.federation_entity.FEPersistence
        kwargs:
          storage:
            class: satosa_idpyop.core.storage.file.FilesystemDB
            kwargs:
              fdir: fe_storage
              key_conv: idpyoidc.util.Base64
              value_conv: idpyoidc.util.JSON
      key_config:
        key_defs:
          -
            type: RSA
            use:
              - sig
          -
            type: EC
            crv: P-256
            use:
              - sig
        private_path: private/fed_keys.json
        public_path: public/fed_keys.json
        read_only: false
      preference:
        organization_name: The OP operator
        contacts: operations@op.example.com
      authority_hints:
        - https://127.0.0.1:7003
      trust_marks:
        - eyJhbGciOiJSUzI1NiIsImtpZCI6ImRqZEdaM0ExZGxaUWMwcDFPVXhoTTBOcVQzQm1URzlKTFdaS05IUlFXVVpZYTJGRGIzZGpXbGhhVFEifQ.eyJpYXQiOiAxNzI3MTgwMTU2LCAiaWQiOiAiaHR0cDovL2RjNGV1LmV4YW1wbGUuY29tL1BlcnNvbklkZW50aWZpY2F0aW9uRGF0YS9zZSIsICJzdWIiOiAiaHR0cHM6Ly8xMjcuMC4wLjE6ODA4MCIsICJleHAiOiAxNzI5NzcyMTU2LCAiaXNzIjogImh0dHBzOi8vMTI3LjAuMC4xOjYwMDAifQ.FV8sp266Zb37JG_A7S2n493B2UMttKWs-iZBIhUfr2WAyjtXkYo0IV3k7Z6UA_tAa1fWVFyN_8tf3UP-85hUn0mi22oAS5WcMTn7yJIa0Jr21NXvy5sQ5_P6jSPAiYuM64NIYsL-IIeX2HdPrO1q1534NqjsolnH-fDMbA1JYgnz79OmC4MpzAlklyz2auPfIwuCPUKjtE0oUlhrbfd126VaOroFRZ3k6lUs6cytXKJT00xizJmhIdwIQ2A7aIdFHhAOecInF9VKy4MwQwf78kRufB_KB4hFPIOgDwosEZat4fLVu3HKOgp4RoPetXzxqZRoO9y4qCNLdAWCXBoJVg
      endpoints:
        entity_configuration:
          path: ".well-known/openid-federation"
          class: 'fedservice.entity.server.entity_configuration.EntityConfiguration'
      trust_anchors:
        https://127.0.0.1:7003:
          keys:
            -
              e: AQAB
              kid: NkQ2SzdFaXNoTlUyTWU3aVpSRHdsYzA2OVE4RjZMekNidjdiSmg4WVdPbw
              kty: RSA
              n: ob3_SmkC_osUWKVIycjLSHkDctVZMzy6sde-8o6K6hAs94JsFqzyTqFSAUxqx6Rn_KiNWp_MHhhnOM6RjP449azy9ZylyCoStEwUv81MhMDKJMGV97km_6en7puq12I6iLvO3aDwiNWCD2MrbeI6CNBrUp1jc77LuBc2g-BJbfA0MnyqBjVEDtdcd-WYw15Kkgsct2M7TdJq04R_s0JboJFe1wwqLmnlBnOoDoxW1q6ucYV5a_iJhejtCZhGP-aDaH-L2vjNf0zjD168UX-whHI5Ww4GTf0_JOM7yYaO9IWINEEgGCybjU5HecFrN94eOFZnzR-yzvJskW1AcWjSjQ
              use: sig
            -
              crv: P-256
              kid: cFNkajZlc0RKSHdqb2x3cUJuc0NEcnMtM2dvWkNOSWtzcEc5Ym40ZjhYbw
              kty: EC
              use: sig
              x: edRaqx_vog8-xJdnogkzHHml59ThEs02GFrpCcuRCHQ
              y: lsj-yN3oueZa5Z-F0FPV6rdQ_4-Ec9bo6MP84xnVCTs
      httpc_params:
        verify: false
        timeout: 14
      entity_type:
        oauth_authorization_server:
          class: openid4v.ServerEntity
          kwargs:
            config:
              client_authn_methods:
                client_secret_jwt: idpyoidc.server.client_authn.ClientSecretJWT
                private_key_jwt: idpyoidc.server.client_authn.PrivateKeyJWT
                client_secret_basic: idpyoidc.server.client_authn.ClientSecretBasic
                client_secret_post: idpyoidc.server.client_authn.ClientSecretPost
                client_assertion: openid4v.openid_credential_issuer.client_authn.ClientAuthenticationAttestation
                dpop_client_auth: idpyoidc.server.oauth2.add_on.dpop.DPoPClientAuth
                request_param: idpyoidc.server.client_authn.RequestParam
              httpc_params:
                verify: false
                timeout: 12
              persistence:
                class: satosa_idpyop.persistence.openid_provider.OPPersistence
                kwargs:
                  storage:
                    class: satosa_idpyop.core.storage.file.FilesystemDB
                    kwargs:
                      fdir: op_storage
                      key_conv: idpyoidc.util.Base64
                      value_conv: idpyoidc.util.JSON
              preference:
                grant_types_supported:
                  - authorization_code
                  - implicit
                  - urn:ietf:params:oauth:grant-type:jwt-bearer
                  - refresh_token
              server_type: oauth2
              token_handler_args:
                jwks_def:
                  private_path: private/token_jwks.json
                  read_only: false
                  key_defs:
                    -
                      type: oct
                      bytes: 24
                      use:
                        - enc
                      kid: code
                code:
                  lifetime: 600
                  kwargs:
                    crypt_conf:
                      kwargs:
                        keys:
                          key_defs:
                            -
                              type: OCT
                              use:
                                - enc
                              kid: password
                            -
                              type: OCT
                              use:
                                - enc
                              kid: salt
                        iterations: 1
                token:
                  class: idpyoidc.server.token.jwt_token.JWTToken
                  kwargs:
                    lifetime: 3600
                    add_claims_by_scope: true
                refresh:
                  class: idpyoidc.server.token.jwt_token.JWTToken
                  kwargs:
                    lifetime: 3600
                id_token:
                  class: idpyoidc.server.token.id_token.IDToken
                  kwargs:
                    base_claims:
                      email:
                        essential: true
                      email_verified:
                        essential: true
              keys:
                key_defs:
                  -
                    type: RSA
                    use:
                      - sig
                  -
                    type: EC
                    crv: P-256
                    use:
                      - sig
                uri_path: jwks/oauth_authorization_server
                private_path: private/oa_jwks.json
                read_only: false
              endpoint:
                token:
                  path: token
                  class: openid4v.openid_credential_issuer.access_token.Token
                  kwargs:
                    client_authn_method:
                      - client_assertion
                authorization:
                  path: authorization
                  class:
                    openid4v.openid_credential_issuer.authorization.Authorization
                  kwargs:
                    response_types_supported:
                      - code
                    response_modes_supported:
                      - query
                      - form_post
                    request_parameter_supported: true
                    request_uri_parameter_supported: true
                    client_authn_method:
                      - pushed_authz
                pushed_authorization:
                  path: par
                  class:
                    idpyoidc.server.oauth2.pushed_authorization.PushedAuthorization
                  kwargs:
                    client_authn_method:
                      - client_assertion
              add_ons:
                pkce:
                  function: idpyoidc.server.oauth2.add_on.pkce.add_support
                  kwargs:
                    code_challenge_length: 64
                    code_challenge_method: S256
                dpop:
                  function: idpyoidc.server.oauth2.add_on.dpop.add_support
                  kwargs:
                    dpop_signing_alg_values_supported:
                      - ES256
                    dpop_endpoints:
                      - token
              template_dir: template
              authentication:
                anon:
                  acr: http://www.swamid.se/policy/assurance/al1
                  class: idpyoidc.server.user_authn.user.NoAuthn
                  kwargs:
                    user: diana
              authz:
                class: idpyoidc.server.authz.AuthzHandling
                kwargs:
                  grant_config:
                    usage_rules:
                      authorization_code:
                        supports_minting:
                          - access_token
                          - refresh_token
                          - id_token
                        max_usage: 1
                      access_token: { }
                      refresh_token:
                        supports_minting:
                          - access_token
                          - refresh_token
                          - id_token
                    expires_in: 43200
              session_params:
                encrypter:
                  kwargs:
                    iterations: 1
                    keys:
                      key_defs:
                        -
                          kid: password
                          type: OCT
                          use:
                            - enc
                        -
                          kid: salt
                          type: OCT
                          use:
                            - enc
              userinfo:
                class: satosa_idpyop.user_info.ProxyUserInfo
                kwargs:
                  credential_type_to_claims:
                    PersonIdentificationData:
                      - email
                      - address.streetaddress
                      - sub
                      - name
                      - family_name
                      - given_name
                      - nickname
        openid_credential_issuer:
          class: satosa_openid4vci.openid_credential_issuer.OpenidCredentialIssuer
          kwargs:
            config:
              issuer: https://example.com/
              client_authn_methods:
                client_authentication_attestation:
                  openid4v.openid_credential_issuer.client_authn.ClientAuthenticationAttestation
                client_secret_basic:
                  idpyoidc.server.client_authn.ClientSecretBasic
                client_secret_post:
                  idpyoidc.server.client_authn.ClientSecretPost
                dpop_client_auth:
                  idpyoidc.server.oauth2.add_on.dpop.DPoPClientAuth
              add_ons:
                dpop:
                  function: idpyoidc.server.oauth2.add_on.dpop.add_support
                  kwargs:
                    dpop_signing_alg_values_supported:
                      - ES256
                    dpop_endpoints:
                      - credential
              persistence:
                class: satosa_idpyop.persistence.openid_provider.OPPersistence
                kwargs:
                  storage:
                    class: satosa_idpyop.core.storage.file.FilesystemDB
                    kwargs:
                      fdir: op_storage
                      key_conv: idpyoidc.util.Base64
                      value_conv: idpyoidc.util.JSON
              userinfo:
                class: satosa_idpyop.user_info.ProxyUserInfo
                kwargs:
                  credential_type_to_claims:
                    PersonIdentificationData:
                      - email
                      - address.streetaddress
                      - sub
                      - name
                      - family_name
                      - given_name
                      - nickname
              httpc_params:
                verify: false
                timeout: 11
              preference:
                attribute_disclosure:
                  "":
                    - given_name
                    - family_name
                    - name
                    - email
                    - nickname
                credential_configurations_supported:
                  -
                    format: vc+sd-jwt
                    id: eudiw.pid.se
                    cryptographic_binding_methods_supported:
                      - jwk
                    cryptographic_suites_supported:
                      - RS256
                      - RS512
                      - ES256
                      - ES512
                    display:
                      name: Swedish PID Provider Example
                      locale: en-US
                    credential_definition:
                      type:
                        - PersonIdentificationData
                      credentialSubject:
                        name:
                          display:
                            -
                              name: Name of a person
                              locale: en-US
                          mandatory: true
                        family_name:
                          display:
                            -
                              locale: en-US
                              name: Current Family Name
                          mandatory: true
                        given_name:
                          display:
                            -
                              locale: en-US
                              name: Current First Name
                          mandatory: true
                        email:
                          display:
                            -
                              locale: en-US
                              name: Current email address
                          mandatory: true
                        nickname:
                          mandatory: true
                          display:
                            -
                              name: A persons nickname
                              locale: en-US
              keys:
                key_defs:
                  -
                    type: RSA
                    use:
                      - sig
                  -
                    type: EC
                    crv: P-256
                    use:
                      - sig
                private_path: private/oci_jwks.json
                read_only: false
              endpoint:
                credential:
                  path: credential
                  class: openid4v.openid_credential_issuer.credential.Credential
                  kwargs:
                    client_authn_method:
                      - dpop_client_auth
              template_dir: template
